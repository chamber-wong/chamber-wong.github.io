---
layout:     post
title:      "java基础之字符串"
subtitle:   "String"
date:       2018-08-07 12:00:00
author:     "Chamber"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - java
    - Java基础
    - String
    - 数据类型
---
## 字符串

> Java将于字符创相关的内容面向对象了,形成的类就叫字符串类,表示方法:""

- **字符串分为两类**
1. 不可变字符串--String:说的是字符串本身没有发生变化,与引用无关---常量
2. 不可变字符串----StringBuffer/StringBuilder:说的是字符串本身可以改变,与引用也无关.

```
//不可变字符串
String s1 = "12asd";

//可变字符串
StringBuffer s2 = new StringBuffer("Hoello world");
	
```
### 不可变字符串String

- **字符串常量保存的位置:<br>**
常量区,可以认为是堆区中的一块特殊区域

- **特点:<br>**
同一个名字的字符串常量在内训中只允许存在一个

```
String s1 = "1000phone";
String s2 = "1000phone";
String s3 = new String("1000phone");
String s4 = new String("1000phone");

System.out.println(s1 == s2);//true
System.out.println(s1 == s3);//false
System.out.println(s3 == s4);//false
System.out.println(s2 == s3);//false

//说明字符串重写了equals方法,重新制定了比较的规则,规则变成:让s1和s3的地址去比较
System.out.println(s1.equals(s2));//true
System.out.println(s1.equals(s3));//true

//当执行s1的时候,回到常量区找叫1000phone的字符串,如果有直接让s1保存他的地址,如果没有,会在常亮区开辟一块空间存1000phone
执行s2是同理s1
执行s3时,有序进行了new,一定会在堆中开辟一块空间,而1000phone是作为参数传给了对象,保存在了对象的一个String类型的成员变量内,所以直接半段s1与s3不相同
执行s4同理s3
```

### 可变字符串(字符串缓冲区)

区分:在不考虑线程安全的前提下,尽量使用StringBuilder,效率高,速度快

> 两者在方法上几乎一模一样

##### StringBuffer

> 从(jdk1.0)开始出现,是线程安全的,要考虑线程安全问题

##### StringBuilder

> (jdk1.5)开始出现,是线程不安全的,不需要考虑线程安全的问题
