---
layout:     post
title:      "java基础之循环,函数,变量"
subtitle:   "Java循环,函数,变量详解"
date:       2018-07-26 12:00:00
author:     "Chamber"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - java
    - Java基础
    - 循环
    - 变量
    - 函数
---
## 循环语句
#### for循环
> 基本结构

```
for(表达式1;表达式2;表达式3){
    表达式4
}
//当表达式2中的逻辑为true时,就往下执行
//for循环的执行顺序为
//表达式1 --> 表达式2 --> 表达式4 --> 表达式3 --> 表达式2 --表达式4 --> 表达式3 --> 表达式2....
```

#### for-each循环
> 基本语法

```
//例如:
int[] ints = {1,2,3,1,4,5,5};
for(int int : ints){
    System.out.println(int+" ");
}

//打印结果为:1 2 3 1 4 5 5 
```

#### while循环
> 基本结构

```
while(表达式1){
    表达式2
}
//当表达式1的逻辑为true时,就往下执行
```

#### do-while循环
> 基本结构

```
do{
    表达式1;
}while(表达式2);

//不论表达式2是否成立,do中都要先执行一次
//do和while中不能添加任何语句
```



#### break和continue
- break 跳过
- continue 可以结束本次循环


#### <font color="red">for和while的选择:</font>
- 是否使用初始值工作,如果使用,尽量使用for,否则使用while


<br><br><br>

## 函数

#### 函数的功能

> 简化了代码,增加了代码的复用性,提高了代码的安全性,简化了相应操作

#### 函数的构成

```
/*
修饰词 返回值类型 函数名(参数列表){//函数体
    执行的代码;
    return 返回值;
}
*/
//实例:
public static void main(String[] args){
    System.out.println("Hello World!");
}
```

#### 修饰词

> 确定当前函数的使用范围

访问权限 | 类 | 包 | 子类 | 其他包
- | :-: | :-: | :-: | :-: |
public | √ | √ | √ | √|
protect | √ | √ | √ | ×|
default | √ | √ | × | × |
private |　√　| × | × | × |

#### 返回值类型

> 告诉别人当前函数返回值的类型.
- 注意:返回值可以没有,但是不能什么都不写,如果有返回值写对应的类型,如果没有写viod

#### 函数名

> 是当前函数的名字,不能省略
>
> 命名规范:遵循小驼峰原则(一个函数名可以由多个单词组成,除了一个个单词以外,其他的每个单词的首字母都为大写)
>
> 要求:尽量做到见名知意

#### 参数列表:

> 执行函数时传入函数的数据,可以有0个或者多个,多个参数之前已,隔开.如果没有参数,函数名后面的()不能省略

#### 函数体

> 函数真正实现功能的地方

#### 执行的代码

> 实现的功能

#### return 

> 向函数外抛出返回值的意思,类型与返回值类型一致.

- 注意:1. 如果没有返回值,不用写return,如果有,return后面只能返回一个值<br>2.还有结束的意思,return后面的代码不会执行

### <font color="red">总结</font>

- 在定义函数时,要求每个函数只能完成一个功能,强调函数功能单一性.

## 局部变量和全局变量

#### 局部变量

> 把定义在函数,for,if中的变量及形参称为局部变量

#### 全局变量

> 把直接定义在类中的变量称为全局变量

```
class Main{
    int a; //全局变量
    public static void main(String[] args){
        int b;//局部变量
        
        if(true){
            int c;//局部变量
        }
    }
}
```

#### 生命周期

> 从定义当前的变量开始到变量被销毁的过程

#### 作用域

> 在生命周期内变量可以起作用的范围


#### 全局变量的作用域

> 整个类,除了static修饰的方法

#### 局部变量的作用域

> 从定义当前的变量开始到变量所在函数,for,if等结束.

#### 生命周期结束意味着变量被释放

#### 区别

> 对于全局变量,如果不赋值也可以使用,系统会赋一个默认值--0
>
> 对于局部变量,必须先赋值后使用

<br><br><br><br>
## 函数的重载

> 对于用一个类中的函数,函数的名字相同,函数的参数不相同,将这种关系称为重载.

#### 原理

> 在程序内部真正识别函数的时候,识别的是函数名+所有参数的类型.

#### 注意

- 重载的函数,本质上是不同的函数
- 重载函数的函数名必须相同
- 参数必须不同(参数的个数,位置,类型)
- 重载与返回值无关

#### 作用

> 简化代码,方便操作

<br><br><br><br><br>
